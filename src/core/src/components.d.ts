/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { IconColors, IconsSizes } from "./types";
export namespace Components {
    interface JoyAvailability {
        /**
          * isPartial dot, define fill or stroke dot display
         */
        "isPartial": boolean;
        /**
          * Text Availability content, if null, only dot will be display
         */
        "label": string | null;
        /**
          * Status Availability, define color
         */
        "status": 'AVAILABLE' | 'AVAILABLE_AND_VERIFIED' | 'NOT_AVAILABLE_WITH_DATE' | 'AVAILABLE_SOON' | 'NOT_AVAILABLE' | '';
    }
    interface JoyIcon {
        /**
          * Defines a non-visible legend
         */
        "ariaLabel"?: string;
        /**
          * Two-tone icon when set to true
         */
        "bicolor": boolean;
        /**
          * Color change on hover
         */
        "clickable": boolean;
        /**
          * The icon color
         */
        "color"?: IconColors;
        /**
          * The icon custom class(es), if needed
         */
        "customClass"?: string;
        /**
          * Full colored icon when set to true
         */
        "full": boolean;
        /**
          * The icon svg filename
         */
        "name": string;
        /**
          * The icon size
         */
        "size"?: IconsSizes;
    }
}
declare global {
    interface HTMLJoyAvailabilityElement extends Components.JoyAvailability, HTMLStencilElement {
    }
    var HTMLJoyAvailabilityElement: {
        prototype: HTMLJoyAvailabilityElement;
        new (): HTMLJoyAvailabilityElement;
    };
    interface HTMLJoyIconElement extends Components.JoyIcon, HTMLStencilElement {
    }
    var HTMLJoyIconElement: {
        prototype: HTMLJoyIconElement;
        new (): HTMLJoyIconElement;
    };
    interface HTMLElementTagNameMap {
        "joy-availability": HTMLJoyAvailabilityElement;
        "joy-icon": HTMLJoyIconElement;
    }
}
declare namespace LocalJSX {
    interface JoyAvailability {
        /**
          * isPartial dot, define fill or stroke dot display
         */
        "isPartial"?: boolean;
        /**
          * Text Availability content, if null, only dot will be display
         */
        "label"?: string | null;
        /**
          * Status Availability, define color
         */
        "status"?: 'AVAILABLE' | 'AVAILABLE_AND_VERIFIED' | 'NOT_AVAILABLE_WITH_DATE' | 'AVAILABLE_SOON' | 'NOT_AVAILABLE' | '';
    }
    interface JoyIcon {
        /**
          * Defines a non-visible legend
         */
        "ariaLabel"?: string;
        /**
          * Two-tone icon when set to true
         */
        "bicolor"?: boolean;
        /**
          * Color change on hover
         */
        "clickable"?: boolean;
        /**
          * The icon color
         */
        "color"?: IconColors;
        /**
          * The icon custom class(es), if needed
         */
        "customClass"?: string;
        /**
          * Full colored icon when set to true
         */
        "full"?: boolean;
        /**
          * The icon svg filename
         */
        "name"?: string;
        /**
          * The icon size
         */
        "size"?: IconsSizes;
    }
    interface IntrinsicElements {
        "joy-availability": JoyAvailability;
        "joy-icon": JoyIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "joy-availability": LocalJSX.JoyAvailability & JSXBase.HTMLAttributes<HTMLJoyAvailabilityElement>;
            "joy-icon": LocalJSX.JoyIcon & JSXBase.HTMLAttributes<HTMLJoyIconElement>;
        }
    }
}
