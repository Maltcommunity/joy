@use '../../style/utils';

$_checkbox-svg: '%3Csvg%20width%3D%2211%22%20height%3D%229%22%20viewBox%3D%220%200%2011%209%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M10.0831%200.000388909L3.66655%206.41696L0.91653%203.66694L0%204.5839L2.75002%207.33349L3.66655%208.25002L4.58308%207.33349L10.9997%200.916919L10.0831%200.000388909Z%22%20fill%3D%22%23FFFFFF%22%2F%3E%3C%2Fsvg%3E';;

:host {
    --checkbox-bg-hover: var(--joy-teal-main);
    --checkbox-bg-checked-hover: var(--joy-teal-main);
    --checkbox-bg-checked-active: var(--joy-teal-dark);
    --checkbox-bg-checked: var(--joy-teal-light);
    --checkbox-color-checked: var(--joy-teal-light);
    --checkbox-bg-disabled: var(--joy-gray-3);
    --checkbox-color-disabled: var(--joy-gray-4);
    --checkbox-border-disabled: var(--joy-gray-3);
    --checkbox-border-active: var(--joy-gray-6);
    --checkbox-color-slot-link: var(--joy-teal-main);
    --checkbox-size: 22px;
    --checkbox-active-size: 26px;
}

@mixin checkboxIcon {
    &:before {
        content: "";
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-shrink: 0;
        width: var(--checkbox-size);
        height: var(--checkbox-size);
        margin-right: var(--joy-spacing-2);
        background-color: white;
        border: 1px solid var(--joy-teal-light);
        border-radius: var(--joy-shape-1);
        transition: box-shadow var(--joy-transition-duration-default) var(--joy-transition-timing-function);
    }
}

@mixin checkboxIconChecked {
    &:before {
        content: url("data:image/svg+xml; utf8, #{$_checkbox-svg}");
        background-color: var(--checkbox-bg-checked);
    }
}

@mixin checkboxIconCheckedAndDisabled {
    &:before {
        background-color: var(--checkbox-bg-disabled);
    }
}

@mixin checkboxIconHover {
    &:before {
        background-color: var(--checkbox-bg-hover);
    }
}

@mixin checkboxIconDisabled {
    &:before {
        border-color: var(--joy-gray-3);
    }
    &#{$_CLASS}__checked &:before {
        background-color: var(--joy-gray-3);
    }
}

$_CLASS: '.joy-checkbox';

#{$_CLASS} {
    position: relative;
    cursor: pointer;
    display: flex;
    @include utils.getFontProperties(s);
    @include utils.unselectable();
    line-height: var(--checkbox-size);
    margin-bottom: var(--joy-spacing-2);

    > input[type="checkbox"] {
        @include utils.srOnly();
        top: 15px; // ensure error tooltip are displayed at the right place
    }

    &__wrapper {
        display: flex;
        align-items: flex-start;
        text-align: left;
        position: relative;

        @include checkboxIcon;
    }

    &__checked &__wrapper {
        color: var(--checkbox-color-checked);
        @include checkboxIconChecked;
    }

    &__disabled &__wrapper {
        color: var(--checkbox-color-disabled);
        cursor: default;

        @include checkboxIconDisabled;

        .subtext {
            color: var(--checkbox-border-disabled);
        }
    }

    &#{$_CLASS}__checked#{$_CLASS}__disabled #{$_CLASS}__wrapper {
        @include checkboxIconCheckedAndDisabled;
    }

    > input[type="checkbox"]:focus-visible {
        ~ * {
            &:after {
                position: absolute;
                top: -3px;
                left: -3px;
                content: "";
                display: flex;
                width: var(--checkbox-active-size);
                height: var(--checkbox-active-size);
                border-radius: var(--joy-shape-2);
                border: 1px solid var(--checkbox-border-active);
            }
        }
    }

    &:hover {
        &#{$_CLASS}__checked:not(#{$_CLASS}__disabled) #{$_CLASS}__wrapper:before {
            background-color: var(--checkbox-bg-checked-hover);
        }
    }

    &:active {
        &#{$_CLASS}__wrapper:not(#{$_CLASS}__disabled) #{$_CLASS}__wrapper {
            &:before {
                background-color: var(--checkbox-bg-checked-active);
            }
        }
    }
}

/**
If this rule is too generic, apply it for p and a tags only
 */
::slotted(*) {
    display: block;
    width: 100%;
    margin-top: 0;
    margin-bottom: var(--joy-spacing-1);
}

::slotted(a) {
    color: var(--checkbox-color-slot-link);
}

::slotted(small) {
    @include utils.getFontProperties(xs);
}
