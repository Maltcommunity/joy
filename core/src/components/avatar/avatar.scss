@use 'style/utils';

$_CLASS: '.joy-avatar';

:host {
    /**
     * @prop --avatar-large-size : Larger avatar size, in pixels
     * @prop --avatar-large-font-size : Larger avatar font size
     * @prop --avatar-medium-size : Medium avatar size, in pixels
     * @prop --avatar-medium-font-size : Medium avatar font size
     * @prop --avatar-small-size : Smaller avatar size, in pixels
     * @prop --avatar-small-font-size : Small avatar font size
     * @prop --avatar-placeholder-background : Placeholder avatar (without photo) background-color
     * @prop --avatar-additional-avatar-background : In an avatar list, you can display a "+X" avatar. The property allows to style its background.
     */
    --avatar-large-size: 100px;
    --avatar-large-font-size: var(--joy-font-size-2xl);
    --avatar-medium-size: 60px;
    --avatar-medium-font-size: var(--joy-font-size-l);
    --avatar-small-size: 30px;
    --avatar-small-font-size: var(--joy-font-size-xs);

    --avatar-placeholder-background: var(--joy-color-neutral-3);
    --avatar-additional-avatar-background: var(--joy-color-secondary-50);

    display: inline-flex;
    font-family: var(--joy-font-family);
    font-weight: var(--joy-font-weight-normal);
}

a {
    text-decoration: none;
}

#{$_CLASS} {
    border-radius: var(--joy-core-radius-5);
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
    background-color: var(--joy-color-secondary-10);
    // addition style for avatar-initials context
    display: flex;
    color: white;
    align-items: center;
    justify-content: center;
    border: 0;
    text-decoration: none; // if it is a link
    white-space: nowrap; // if the text if too long, exemple + 1500

    // In case we use <picture> tag
    img {
        display: block;
        height: 100%;
        min-width: 100%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        overflow: hidden;
        border-radius: 50%;
        object-fit: cover;
    }


    &__compress {
        z-index: 1;
        border: 2px solid white;
        &:not(#{$_CLASS}__first) {
            margin-left: -30px;
        }
    }

    /** ******** */
    /* ALL SIZES */
    $_SIZES: (
        large: (
            size: var(--avatar-large-size),
            fontSize: var(--avatar-large-font-size)
        ),
        medium: (
            size: var(--avatar-medium-size),
            fontSize:  var(--avatar-medium-font-size)
        ),
        small: (
            size: var(--avatar-small-size),
            fontSize: var(--avatar-small-font-size)
        )
    );

    @each $name, $size in $_SIZES {
        &#{$_CLASS}__#{$name} {
            width: map-get($size, size);
            height: map-get($size, size);
            min-width: map-get($size, size);
            max-width: map-get($size, size);
            min-height: map-get($size, size);
            max-height: map-get($size, size);

            font-size: map-get($size, fontSize);
            font-family: inherit;
            font-weight: inherit;

            @if $name == 'small' {
                &#{$_CLASS}__compress:not(#{$_CLASS}__first) {
                    margin-left: -15px; // hardcoded at the moment, I don't think we'll need new sizes and lists for big sizes...
                }
            }
        }
    }

    &#{$_CLASS}__placeholder {
        background-color: var(--avatar-placeholder-background);
        svg {
            color: white;
        }
    }

    &__number {
        background-color: var(--avatar-additional-avatar-background);
    }

    @include utils.avatarColor();
}